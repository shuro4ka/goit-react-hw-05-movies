{"version":3,"file":"static/js/785.303a7817.chunk.js","mappings":"iMAmCA,UA9BgB,SAAAA,GACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaN,GAAS,GAAO,GAAMO,MAAK,SAAAC,GACpCJ,EAAeI,EAAKC,QACvB,GACJ,GAAE,CAACT,KAGA,yBACKG,EAAYO,OAAS,GAClB,wBACKP,EAAYQ,KAAI,SAAAC,GACb,OACI,2BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFNF,EAAOG,GAKvB,OAGD,mDAInB,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieById } from 'service/api';\n\n\nconst Reviews = props => {\n    const { movieId } = useParams();\n    const [reviewsData, setReviewsData] = useState([]);\n\n    useEffect(() => {\n        getMovieById(movieId, false, true).then(data => {\n            setReviewsData(data.results);\n        });\n    }, [movieId]);\n\n    return (\n        <div>\n            {reviewsData.length > 0 ? (\n                <ul>\n                    {reviewsData.map(review => {\n                        return (\n                            <li key={review.id}>\n                                <h4>{review.author}</h4>\n                                <p>{review.content}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n                ) : (\n                    <h3>Reviews are not found</h3>\n            )}\n        </div>\n    );\n};\n\nexport default Reviews;"],"names":["props","movieId","useParams","useState","reviewsData","setReviewsData","useEffect","getMovieById","then","data","results","length","map","review","author","content","id"],"sourceRoot":""}