{"version":3,"file":"static/js/513.2b6e219a.chunk.js","mappings":"uOACA,GAAiB,E,SCGJA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACE,mBAAQC,UAAWC,EAAAA,UAAnB,UACE,kBAAMD,UAAWC,EAAAA,WAAmBL,SAAUA,EAA9C,WACE,mBAAQM,KAAK,SAASF,UAAWC,EAAAA,iBAAjC,UACE,iBAAMD,UAAU,eAAhB,uBAGF,kBACEA,UAAWC,EAAAA,gBACXC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAU,SAACC,GAAOR,EAAcQ,EAAEC,OAAOC,MAAO,EAChDA,MAAOX,QAKhB,ECzBD,EAAgC,8BAAhC,EAA2E,2BAA3E,EAAiH,yBAAjH,EAA0L,wBAA1L,EAA+N,2BCsE/N,EAhEe,WAAO,IAAD,EACbY,GAAWC,EAAAA,EAAAA,MACjB,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAUMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAElDC,EAAAA,EAAAA,YAAU,WACY,KAAhBF,EAKJG,YAAW,YACTC,EAAAA,EAAAA,IAAkBJ,GAAaK,MAAK,SAAAC,GAClCV,EAAUU,EAAKC,QAChB,GACF,GAAE,KARDX,EAAU,GASb,GAAE,CAACI,IAEJ,IAAMQ,GAAgBC,EAAAA,EAAAA,UAAQ,WAC5B,OAAOd,EAAOe,QACZ,SAAAC,GAAK,OACHA,EAAMC,eAAe,UACrBD,EAAME,MAAMC,cAAcC,SAASf,EAAYc,cAF5C,GAIR,GAAE,CAACd,EAAaL,IAEjB,OACE,iBAAKZ,UAAWC,EAAhB,WACE,SAACN,EAAD,CAAWC,SA/BE,SAAAW,GACfA,EAAE0B,iBACF,IAAMnC,EAAaS,EAAE2B,cAAcC,SAAS,GAAG1B,MAC/CO,EAA+B,KAAflB,EAAoB,CAAE6B,OAAQ7B,GAAe,CAAC,EAC/D,IA4BI2B,EAAcW,OAAS,IACtB,eAAIpC,UAAWC,EAAf,SACGwB,EAAcY,KAAI,SAAAT,GAAK,OACtB,eAAI5B,UAAWC,EAAf,UACE,iBAAKqC,GAAE,UAAKV,EAAMW,IAAMC,MAAO,CAAEC,KAAM/B,GAAvC,UACGkB,EAAMc,aACL,gBAAKC,IAzCJ,kCAyCoBf,EAAMc,YAAaE,IAAI,YAE5C,gBACE5C,UAAWC,EACX0C,IAAI,mFACJC,IAAI,yBAIR,eAAI5C,UAAWC,EAAf,SAAmC2B,EAAME,MAAMM,OAAS,GAAKR,EAAME,MAAMe,MAAM,EAAG,IAAM,MAAQjB,EAAME,YAZrEF,EAAMW,GADrB,QAqBjC,C","sources":["components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import styles from './Searchbar.module.css';\nimport {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.searchForm} onSubmit={onSubmit}>\n        <button type=\"submit\" className={styles.searchFormButton}>\n          <span className=\"button-label\">Search</span>\n        </button>\n\n        <input\n          className={styles.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={(e) => {setInputValue(e.target.value)}}\n          value={inputValue}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"listContainer\":\"Movies_listContainer__kmeL5\",\"moviesList\":\"Movies_moviesList__lstJL\",\"listItem\":\"Movies_listItem__YWcFi\",\"movieLink\":\"Movies_movieLink__ERyJ6\",\"noImage\":\"Movies_noImage__Sd4jS\",\"movieTitle\":\"Movies_movieTitle__lz38M\"};","import { useMemo } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchedMovies } from 'service/api';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const imageURL = 'https://image.tmdb.org/t/p/w185';\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const inputValue = e.currentTarget.elements[1].value;\n    setSearchParams(inputValue !== '' ? { filter: inputValue } : {});\n  };\n\n  const filterParam = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    if (filterParam === '') {\n      setMovies([]);\n      return;\n    }\n\n    setTimeout(() => {\n      getSearchedMovies(filterParam).then(data => {\n        setMovies(data.results);\n      });\n    }, 200);\n  }, [filterParam]);\n\n  const visibleMovies = useMemo(() => {\n    return movies.filter(\n      movie =>\n        movie.hasOwnProperty('title') &&\n        movie.title.toLowerCase().includes(filterParam.toLowerCase())\n    );\n  }, [filterParam, movies]);\n\n  return (\n    <div className={styles.listContainer}>\n      <Searchbar onSubmit={onSubmit} />\n      {visibleMovies.length > 0 && (\n        <ul className={styles.moviesList}>\n          {visibleMovies.map(movie => (\n            <li className={styles.listItem} key={movie.id}>\n              <nav to={`${movie.id}`} state={{ from: location }}>\n                {movie.poster_path ? (\n                  <img src={imageURL + movie.poster_path} alt=\"Poster\" />\n                ) : (\n                  <img\n                    className={styles.noImage}\n                    src=\"https://icons.iconarchive.com/icons/icons8/windows-8/512/City-No-Camera-icon.png\"\n                    alt=\"No Poster Available\"\n                  />\n                )}\n\n                <h2 className={styles.movieTitle}>{movie.title.length > 13 ? movie.title.slice(0, 13) + '...' : movie.title}</h2>\n              </nav>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Searchbar","onSubmit","useState","inputValue","setInputValue","className","styles","type","autoComplete","autoFocus","placeholder","onChange","e","target","value","location","useLocation","movies","setMovies","useSearchParams","searchParams","setSearchParams","filterParam","get","useEffect","setTimeout","getSearchedMovies","then","data","results","visibleMovies","useMemo","filter","movie","hasOwnProperty","title","toLowerCase","includes","preventDefault","currentTarget","elements","length","map","to","id","state","from","poster_path","src","alt","slice"],"sourceRoot":""}